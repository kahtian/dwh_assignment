-- =============================================
-- SALES_FACT
-- =============================================
DROP TABLE SALES_FACT CASCADE CONSTRAINTS;

CREATE TABLE SALES_FACT
(
    date_key          NUMBER NOT NULL,
    member_key        NUMBER NOT NULL,
    book_key          NUMBER NOT NULL,
    staff_key         NUMBER NOT NULL,
    orderQty          NUMBER,
    orderUnitPrice    NUMBER(10,2),
    orderTotalPrice   NUMBER(12,2),
    purchaseUnitCost  NUMBER(10,2),
    purchaseTotalCost NUMBER(12,2),
    profitMargin      NUMBER(12,2),
    CONSTRAINT SF_DATE_FK   FOREIGN KEY(date_key)   REFERENCES DATE_DIM(date_key),
    CONSTRAINT SF_MEMBER_FK FOREIGN KEY(member_key) REFERENCES MEMBER_DIM(member_key),
    CONSTRAINT SF_BOOK_FK   FOREIGN KEY(book_key)   REFERENCES BOOK_DIM(book_key),
    CONSTRAINT SF_STAFF_FK  FOREIGN KEY(staff_key)  REFERENCES STAFF_DIM(staff_key)
);

-- =============================================
-- ETL: SALES_FACT
-- =============================================
INSERT INTO SALES_FACT
SELECT D.date_key,
       M.member_key,
       B.book_key,
       S.staff_key,
       OD.orderQty,
       OD.orderUnitPrice,
       (OD.orderQty * OD.orderUnitPrice) AS orderTotalPrice,
       NVL(P.min_unitCost, 0) AS purchaseUnitCost,
       (OD.orderQty * NVL(P.min_unitCost,0)) AS purchaseTotalCost,
       (OD.orderQty * OD.orderUnitPrice) - (OD.orderQty * NVL(P.min_unitCost,0)) AS profitMargin
FROM ORDER_DETAILS OD
JOIN ORDERS O 
     ON OD.orderID = O.orderID
JOIN DATE_DIM D 
     ON O.orderDate = D.cal_date
JOIN MEMBER_DIM M 
     ON O.memberID = M.memberID
JOIN STAFF_DIM S 
     ON O.staffID = S.staffID
JOIN BOOK_DIM B 
     ON OD.bookID = B.bookID
LEFT JOIN (
      SELECT BOOKID, MIN(purchaseUnitCost) AS min_unitCost
      FROM PURCHASE
      GROUP BY BOOKID
) P
     ON OD.bookID = P.bookID;

COMMIT;
